{"pageProps":{"optimizations":[{"slug":"react-memo","title":"React.memo","summary":"Prevents unnecessary re-renders of functional components by memoizing the result unless props change."},{"slug":"node-event-loop","title":"Node.js Event Loop Awareness","summary":"Understanding how the event loop works allows you to write more efficient asynchronous code."},{"slug":"js-memory-leaks","title":"Avoid JavaScript Memory Leaks","summary":"Leaks happen when memory is retained unnecessarily. Clean up references, listeners, and timers."},{"slug":"api-pagination","title":"API Pagination","summary":"Never return unbounded data. Always paginate large results from your API."},{"slug":"api-rate-limiting","title":"API Rate Limiting","summary":"Limit requests to prevent abuse and protect server resources."},{"slug":"code-splitting","title":"Code Splitting (Dynamic Imports)","summary":"Split bundles to reduce initial load time."},{"slug":"useMemo-useCallback","title":"useMemo and useCallback","summary":"Memoize functions and values to avoid unnecessary re-creation."},{"slug":"image-optimization","title":"Image Optimization","summary":"Use Next.js <Image> component for optimal performance."},{"slug":"lazy-loading","title":"Lazy Loading Components","summary":"Load components only when needed to reduce initial bundle size."},{"slug":"prefetching-data","title":"Prefetching Data","summary":"Load data in advance to improve perceived performance."},{"slug":"debounce-throttle","title":"Debounce and Throttle Events","summary":"Limit how often expensive functions run in response to frequent events."},{"slug":"web-worker-usage","title":"Use Web Workers for Heavy Computations","summary":"Offload CPU-intensive tasks to background threads."},{"slug":"ssr-caching","title":"SSR Caching Strategies","summary":"Cache server-side rendered pages or data to speed up responses."},{"slug":"bundle-analyzing","title":"Bundle Analyzing","summary":"Analyze and optimize JavaScript bundle size."},{"slug":"critical-css","title":"Critical CSS Extraction","summary":"Inline above-the-fold CSS to speed up first paint."},{"slug":"http2-multiplexing","title":"HTTP/2 Multiplexing","summary":"Serve multiple assets over a single connection for faster loads."}]},"__N_SSG":true}